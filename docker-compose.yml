version: "3.8" # 利用するdocker-compose.yml(ファイルの書式)のバージョン。バージョン毎に書ける項目なども変わる。
services: # 各「サービス」の定義
  app: # "app"という名前で「サービス」を定義
    build: ./infra/php
    volumes: # 共有ボリュームの定義
      - ./backend:/work
  web: # "web"という名前で「サービス」を定義
    image: nginx:1.18-alpine # "nginx"の「イメージ」を使用
    ports: # ホストの「ポート番号」とコンテナーの「ポート番号」を対応付けを定義
      - 80:80 # ホストの「ポート番号」 80 とコンテナーの「ポート番号」 80 を対応付けます。
      # このようにすることで、ホスト、つまり PC 自身のポート番号 80 に通信を行うと
      # 対応付けたコンテナーのポート番号 80 に通信を行うことができるようになります。
    volumes:
      - ./backend:/work
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
    working_dir: /work
  db: # "db"という名前で「サービス」を定義
    build: ./infra/mysql
    volumes:
      - db-store:/var/lib/mysql
volumes: # ボリュームの定義。コンテナが消えても保持しておきたいデータなどがある場合に定義する。
  db-store: # db-dataというローカルボリュームを定義している。

# サービス = 起動するコンテナーの設定の定義
# イメージ = Dockerのコンテナーの元となるもの
# ボリューム = データを永続化できる場所のこと。コンテナ内部にデータ(ファイル)を保存しても、コンテナ破棄すると消えてしまう。
          #  なので、データを永続化したいときは、コンテナの外にデータを置く必要がある。
          #  その場所のことを、ボリュームと呼ぶ。
